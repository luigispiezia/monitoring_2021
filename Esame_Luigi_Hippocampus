##############################################################################
# Project title: mapping the coastal distribution of Hippocampus erectus 
# in the North-western Atlantic Ocean

################# PACKAGES #################

library(dismo)
library(raster)
library(maptools)
library(sp)
library(spThin)
library(ggplot2)
library(patchwork)
library(RStoolbox)
library(writexl)
library(jsonlite)
library(rJava)
library(viridis)  # Aggiunto per scale_fill_viridis

################# SET THE WORKING DIRECTORY #################

setwd("/Users/luigispiezia/Desktop/esame/")

################# IMPORT DATA #################

# Cache GBIF data for Hippocampus erectus to avoid re-downloading
data_file <- "cached_Hippocampus_data.rds"
if (file.exists(data_file)) {
  Hippocampus_data <- readRDS(data_file)
} else {
  Hippocampus_data <- gbif("hippocampus", "erectus", geo = TRUE, removeZeros = FALSE)
  saveRDS(Hippocampus_data, data_file)
}

# Show data only if lat and lon are known values (not NA)
He_geo <- subset(Hippocampus_data, !is.na(lon) & !is.na(lat))
dim(He_geo)

# Quickly visualize the data
data(wrld_simpl)  # Load wrld_simpl from maptools as SpatialPolygonsDataFrame 
plot(wrld_simpl, xlim = c(-180, 180), ylim = c(-90, 90), axes = TRUE, col = "light green")
points(He_geo$lon, He_geo$lat, col = 'orange', pch = 20, cex = 0.75)

################# DATA CLEANING #################

# Find and delete duplicates
dups <- duplicated(He_geo[, c('lon', 'lat')])
sum(dups)  # Count duplicates
heg <- He_geo[!dups, ]
dim(heg)  # Dimensions after cleaning

# Check for points within raster extent
ext <- extent(-100, -50, 0, 50)  # Define the extent
points_in_extent <- !is.na(extract(raster("Env_Data/Sea_Temperature_Current.tif"), heg[, c("lon", "lat")]))
heg <- heg[points_in_extent, ]

# Back to normal dataframe and save
heg <- as.data.frame(heg)

################# IMPORT RASTER LAYERS FOR THE ENV VARIABLES #################

# Raster layers were downloaded from BioOracle
sea_temperature <- raster("Env_Data/Sea_Temperature_Current.tif")
sea_temperature_future <- raster("Env_Data/Sea_Temperature_Future.tif")
salinity <- raster("Env_Data/Salinity_Current.tif")
salinity_future <- raster("Env_Data/Salinity_Future.tif")

# Ensure raster layers have the same CRS
sea_temperature <- projectRaster(sea_temperature, crs = crs(ext))
salinity <- projectRaster(salinity, crs = crs(ext))

# Crop raster layers to the extent
sea_temperature_cropped <- crop(sea_temperature, ext)
sea_temperature_future_cropped <- crop(sea_temperature_future, ext)
salinity_cropped <- crop(salinity, ext)
salinity_future_cropped <- crop(salinity_future, ext)

# Difference
crp <- colorRampPalette(c('red', 'gold', 'darkgoldenrod3', "cyan", "cyan4", "chartreuse1", "darkgreen"))(100)
temp_difference <- sea_temperature_cropped - sea_temperature_future_cropped
plot(temp_difference, col = crp, main = "Expected future changes in mean ocean sea surface temperature (\u00b0C)")
sal_difference <- salinity_cropped - salinity_future_cropped
plot(sal_difference, col = crp, main = "Expected future changes in mean ocean salinity (\u00b0C)")

################# PLOT PRESENCE DATA ON A RASTER #################

# Convert to SPDF
coordinates(heg) <- ~lon + lat
crs(heg) <- crs(wrld_simpl)

# Crop to Sargasso Sea
heg2 <- crop(heg, ext)
heg2 <- as.data.frame(heg2)  # Back to normal dataframe

raster_df <- as.data.frame(sea_temperature_cropped, xy = TRUE)

ggplot() +
  geom_raster(data = raster_df, aes(x = x, y = y, fill = Sea_Temperature_Current)) +
  geom_point(data = heg2, aes(x = lon, y = lat), color = "black", size = 1) +
  scale_fill_viridis(option = "cividis", na.value = "transparent", name = "Temperature (\u00b0C)") +
  labs(title = "Current distribution of Hippocampus erectus in the Sargasso Sea",
       x = "Longitude",
       y = "Latitude") +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.title = element_text(hjust = 0.5, size = 14)
  )

################# MAXENT #################

# Stack raster layers 
past <- stack(sea_temperature_cropped, salinity_cropped)
fut <- stack(sea_temperature_future_cropped, salinity_future_cropped)
names(fut) <- names(past)  # Assign the same names to both

# MAXENT: x = env variables, p = occurrences
model <- maxent(p = heg2[, c("lon", "lat")], x = past, nbg = 20000)

# Response curve and prediction
plot(model)
response(model)

# Prediction past and future
map_past <- predict(model, past)
map_fut <- predict(model, fut)

# Plot the layers
names(map_past) <- "Probability"
map_past_df <- as.data.frame(map_past, xy = TRUE)
p1 <- ggplot() + geom_raster(map_past_df, mapping = aes(x = x, y = y, fill = Probability)) +
  scale_fill_viridis(option = "cividis", na.value = "transparent") + theme_gray() +
  ggtitle("Present distribution probabilities of Hippocampus erectus") +
  labs(x = "Longitude", y = "Latitude", caption = "Prediction: Maxent version 3.4.3") + 
  theme(axis.title = element_text(size = 15), plot.title = element_text(hjust = 0.5, size = 16, face = "bold.italic"))

names(map_fut) <- "Probability"
map_fut_df <- as.data.frame(map_fut, xy = TRUE)
p2 <- ggplot() + geom_raster(map_fut_df, mapping = aes(x = x, y = y, fill = Probability)) +
  scale_fill_viridis(option = "cividis", na.value = "transparent") + theme_gray() +
  ggtitle("Future distribution probabilities of Hippocampus erectus") +
  labs(x = "Longitude", y = "Latitude", caption = "Prediction: Maxent version 3.4.3") + 
  theme(axis.title = element_text(size = 15), plot.title = element_text(hjust = 0.5, size = 16, face = "bold.italic"))

# Plot the graphs together
p1 + p2



