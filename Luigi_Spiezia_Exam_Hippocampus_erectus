# Project title: Mapping the Coastal Distribution of Hippocampus erectus in the North-western Atlantic Ocean

################# PACKAGES #################

# Load necessary libraries
library(dismo)        # For MaxEnt modeling
library(raster)       # For handling raster data
library(maptools)     # For spatial data processing
library(sp)           # For working with spatial objects
library(spThin)       # To reduce spatial sampling bias
library(ggplot2)      # For data visualization
library(patchwork)    # To combine multiple plots
library(RStoolbox)    # For raster data processing
library(writexl)      # To export data to Excel
library(jsonlite)     # For handling JSON data
library(rJava)        # Required for running MaxEnt in R
library(viridis)      # For improved color palettes

################# SET THE WORKING DIRECTORY #################

# Set the working directory where data files are stored
setwd("/Users/luigispiezia/Desktop/esame/")

################# IMPORT DATA #################

# Cache GBIF data locally to avoid repeated downloads
data_file <- "cached_Hippocampus_data.rds"

if (file.exists(data_file)) {  # Check if the file already exists
  Hippocampus_data <- readRDS(data_file)  # If it exists, load the cached data
} else {
  Hippocampus_data <- gbif("hippocampus", "erectus", geo = TRUE, removeZeros = FALSE)  # Download data from GBIF
  saveRDS(Hippocampus_data, data_file)  # Save data for future use
}

# Check column names of the dataset
colnames(Hippocampus_data)  
# We need "lon" (longitude) and "lat" (latitude)

# Filter out records with missing geographic coordinates
He_geo <- subset(Hippocampus_data, !is.na(lon) & !is.na(lat))
dim(He_geo)  # Check the number of remaining records after filtering

################# QUICK DATA VISUALIZATION #################

# Load a world map layer for spatial visualization
data(wrld_simpl)  

# Plot a world map with the dataset
plot(wrld_simpl, xlim=c(-180,180), ylim=c(-90,90), axes=TRUE, col="light green")

# Add occurrence points of *Hippocampus erectus* on the map
points(He_geo$lon, He_geo$lat, col='orange', pch=20, cex=0.75)

################# DATA CLEANING #################

# Identify and remove duplicate occurrence points based on latitude and longitude
dups <- duplicated(He_geo[, c('lon', 'lat')])
sum(dups)  # Count the number of duplicates found
heg <- He_geo[!dups, ]  # Remove duplicates

# Check the number of points before and after cleaning
dim(heg)  
dim(He_geo)  

# Plot cleaned data
plot(wrld_simpl, xlim=c(-180,180), ylim=c(-90,90), axes=TRUE, col="#FFCC66", bg="light blue", main="Global distribution of Hippocampus erectus")
points(heg$lon, heg$lat, col='red', pch=20, cex=0.75)

# Convert the cleaned dataset back to a standard dataframe for further processing
heg <- as.data.frame(heg)

################# IMPORT RASTER LAYERS FOR ENVIRONMENTAL VARIABLES #################

# Load environmental raster layers downloaded from BioOracle
sea_temperature <- raster("Env_Data/Sea_Temperature_Current.tif")
sea_temperature_future <- raster("Env_Data/Sea_Temperature_Future.tif")
salinity <- raster("Env_Data/Salinity_Current.tif")
salinity_future <- raster("Env_Data/Salinity_Future.tif")

# Set up a color palette for better visualization
crp <- colorRampPalette(c('red', 'gold', 'darkgoldenrod3', "cyan", "cyan4", "chartreuse1", "darkgreen"))(100)

# Define the study area extent (Northwestern Atlantic)
ext <- extent(-100, -50, 0, 50)

# Crop raster data to focus on the study area
sea_temperature_cropped <- crop(sea_temperature, ext)
sea_temperature_future_cropped <- crop(sea_temperature_future, ext)
salinity_cropped <- crop(salinity, ext)
salinity_future_cropped <- crop(salinity_future, ext)

# Compute the difference between current and future conditions
temp_difference <- sea_temperature_cropped - sea_temperature_future_cropped
sal_difference <- salinity_cropped - salinity_future_cropped

# Plot expected climate change impacts
plot(temp_difference, col = crp, main = "Expected future changes in mean ocean sea surface temperature (°C)")
plot(sal_difference, col = crp, main = "Expected future changes in mean ocean salinity (°C)")

################# PLOT PRESENCE DATA ON A RASTER #################

# Convert occurrence data into a spatial object
coordinates(heg) <- ~lon+lat
crs(heg) <- crs(wrld_simpl)

# Crop occurrence data to match the study area extent
heg2 <- crop(heg, ext)
heg2 <- as.data.frame(heg2)  # Convert back to a dataframe

# Convert raster to dataframe for visualization in ggplot
raster_df <- as.data.frame(sea_temperature_cropped, xy = TRUE)

# Plot current species distribution over environmental data
ggplot() +
  geom_raster(data = raster_df, aes(x = x, y = y, fill = thetao_mean)) +
  geom_point(data = heg2, aes(x = x, y = y), color = "black", size = 1) +
  scale_fill_gradientn(colors = c("blue", "green", "yellow", "red"), name = "Temperature (°C)") +
  labs(title = "Current distribution of Hippocampus erectus in the North Atlantic",
       x = "Longitude",
       y = "Latitude") +
  theme_minimal()

################# MAXENT MODEL #################

# Create a stack of environmental variables for present and future conditions
past <- stack(sea_temperature_cropped, salinity_cropped)
fut <- stack(sea_temperature_future_cropped, salinity_future_cropped)
names(fut) <- names(past)  

# Build the MaxEnt model using occurrence points and environmental variables
model <- maxent(p = heg2[, c("x", "y")], x = past, nbg = 20000)

# Plot response curves for environmental variables
plot(model)  
response(model)  

# Predict the current and future distribution of the species
map_past <- predict(model, past)
map_fut <- predict(model, fut)

# Visualize model predictions using a colorblind friendly visualization
p1 <- ggplot() + geom_raster(data = as.data.frame(map_past, xy = TRUE), aes(x = x, y = y, fill = Probability)) +
  scale_fill_viridis(option= "cividis", na.value = "transparent") +
  ggtitle("Present distribution probabilities of Hippocampus erectus")

p2 <- ggplot() + geom_raster(data = as.data.frame(map_fut, xy = TRUE), aes(x = x, y = y, fill = Probability)) +
  scale_fill_viridis(option= "cividis", na.value = "transparent") +
  ggtitle("Future distribution probabilities of Hippocampus erectus")

p1 + p2  # Display the two maps side by side
